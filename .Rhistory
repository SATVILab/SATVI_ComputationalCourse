View(hisat2.basecall)
library("swirl")
install.packages("swirl")
library("swirl")
swirl()
library("swirl")
swirl()
swirl()
library("swirl")
swirl()
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
swirl()
info()
#' Load libraries
library(flowCore)#This packages are not being imported for some reason
library(openCyto)
install.packages("swirl")
library("swirl")
swirl()
5 + 7
library(Seurat)
library(SeuratData)
library(patchwork)
# install dataset
InstallData("ifnb")
library(Seurat)
library(SeuratData)
library(patchwork)
# install dataset
InstallData("ifnb")
remotes::install_github("satijalab/seurat", "seurat5", quiet = TRUE)
remotes::install_github("satijalab/seurat-data", "seurat5", quiet = TRUE)
remotes::install_github("bnprks/BPCells", quiet = TRUE)
brew install hdf5
brew -V
brew -v
library(Seurat)
library(SeuratData)
library(patchwork)
# install dataset
InstallData("ifnb")
install.packages("download.dir/ifnb.SeuratData_3.0.0.tar.gz", repos = NULL, type = "source")
install.packages("https://seurat.nygenome.org/src/contrib/ifnb.SeuratData_3.0.0.tar.gz", repos = NULL, type = "source")
library(ifnb.SeuratData)
ifnb<-LoadData("ifnb")
library(ifnb.SeuratData)
ifnb<-LoadData("ifnb")
View(ifnb)
load("/Users/monikalooney/Library/CloudStorage/Dropbox/SATVI/SATVI_Experimental/SATVI_Experimental_M72ImmuneCorrelatesPilot/M72ImmuneCorrelatesPilot_FullPilot/Data_Results/20231110_FullPilot_CITEseqHIVE/BNPv2_beta/Analysis/20240102_FullPilot_unfiltered.Rdata")
load("/Users/monikalooney/Library/CloudStorage/Dropbox/SATVI/SATVI_Experimental/SATVI_Experimental_M72ImmuneCorrelatesPilot/M72ImmuneCorrelatesPilot_FullPilot/Data_Results/20231110_FullPilot_CITEseqHIVE/BNPv2_beta/Analysis/20240102_FullPilot_unfiltered.Rdata")
View(obj)
View(obj)
library(swril)
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1/folder2")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir3"), "testdir2")
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
play()
?file.remove
unlink(testdir, recursive = TRUE)
list.files()
unlink("testdir", recursive = TRUE)
nxt()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(1, 20, by = 0.5)
seq(0, 10, by = 0.5)
seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 0, 2))
rep(c(0, 1, 2))
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
bye()
library(swirl)
swirl()
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Monika")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- | rep(NA, 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
bye()
install.packages("rmarkdown")
install.packages("knitr")
install.packages("tidyverse")
reticulate::repl_python()
reticulate::repl_python()
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
#| warning: FALSE
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
#| message: FALSE
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
#| message: FALSE
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
#| message: false
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
#| message: false
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
# Generate a warning
x <- -1
if (x < 0) {
warning("x is negative!")
}
# Generate a message
y <- 10
if (y > 5) {
message("y is greater than 5")
}
data
data()
library(knitr) # Needed to embed an external image within a code chunk
library(quarto) # Needed to render Quarto document from R console
library(ggplot2) # Needed to plot data
data("esoph")
head(esoph)
ggplot(data = esoph, aes(x = agegp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Esoph Dataset", x = "Age Group", y = "Number of Cases")
View(esoph)
head(esoph)
summary(esoph)
data("esoph", header = TRUE)
ggplot(data = esoph, aes(x = agegp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Age Group", y = "Number of Cases")
ggplot(data = esoph, aes(x = tobgp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Tobacco Consumption", y = "Number of Cases")
ggplot(data = esoph, aes(x = agegp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Age Group", y = "Number of Cases")
ggplot(data = esoph, aes(x = tobgp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Tobacco Consumption", y = "Number of Cases")
ggplot(data = esoph, aes(x = alcgp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Alcohol Consumption", y = "Number of Cases")
require(stats)
require(graphics) # for mosaicplot
summary(esoph)
## effects of alcohol, tobacco and interaction, age-adjusted
model1 <- glm(cbind(ncases, ncontrols) ~ agegp + tobgp * alcgp,
data = esoph, family = binomial())
anova(model1)
## Try a linear effect of alcohol and tobacco
model2 <- glm(cbind(ncases, ncontrols) ~ agegp + unclass(tobgp)
+ unclass(alcgp),
data = esoph, family = binomial())
summary(model2)
## Re-arrange data for a mosaic plot
ttt <- table(esoph$agegp, esoph$alcgp, esoph$tobgp)
o <- with(esoph, order(tobgp, alcgp, agegp))
ttt[ttt == 1] <- esoph$ncases[o]
tt1 <- table(esoph$agegp, esoph$alcgp, esoph$tobgp)
tt1[tt1 == 1] <- esoph$ncontrols[o]
tt <- array(c(ttt, tt1), c(dim(ttt),2),
c(dimnames(ttt), list(c("Cancer", "control"))))
mosaicplot(tt, main = "esoph data set", color = TRUE)
ggplot(data = esoph, aes(x = agegp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Age Group", y = "Number of Cases")
ggplot(data = esoph, aes(x = tobgp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Tobacco Consumption", y = "Number of Cases")
ggplot(data = esoph, aes(x = alcgp, y = ncases)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Alcohol Consumption", y = "Number of Cases")
ggplot(data = esoph, aes(x = alcgp, y = tobgp)) +
geom_point() +  # Add points
labs(title = "Smoking, Alcohol and Esophageal Cancer", x = "Alcohol Consumption", y = "Tobacco Consumption")
ggplot(data = esoph, aes(x = alcgp, y = tobgp)) +
geom_point() +  # Add points
labs(title = "Alcohol vs Tobacco Consumption",
x = "Alcohol Consumption Group",
y = "Tobacco Consumption Group")
?markdown
?rmarkdown
?quarto
install.packages("DT")
library(DT)
install.packages("DT")
library(DT)
# Now just use the datatable function to display your table.
datatable(head(esoph), class = 'cell-border stripe')
install.packages("DT")
install.packages("webshot2")
